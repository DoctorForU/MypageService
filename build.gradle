plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

bootJar {
    archiveBaseName = 'mypage-service'  // 실행 가능한 JAR 파일 이름 설정
    archiveVersion = ''                // 버전 정보 제거
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	//Eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// MSA 통신
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// 모니터링
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// config 서버 사용
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {       mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"    }
}

tasks.named('test') {
	useJUnitPlatform()
}
